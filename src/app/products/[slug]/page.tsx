// app/products/[slug]/page.tsx
// Dies ist deine dynamische Produktseite fÃ¼r den Next.js App Router.
// Sie wird unter der Route /products/:slug erreichbar sein.

import { notFound } from 'next/navigation';
import { ProductService } from '@/data/productService';
import * as supabaseProductService from '@/lib/supabase-product-service';
import ProductPageContent from '@/components/productcomponents/ProductPageContent';
import Navigation from '@/components/ui/Navigation';
import Footer from '@/components/shared/Footer';

// This enables ISR for all pages generated by this route.
// It sets a time-based revalidation of 1 hour. On-demand revalidation will override this.
export const revalidate = 3600;

/**
 * Generates static paths for all known products at build time.
 * It combines slugs from local files and the Supabase database.
 */
export async function generateStaticParams() {
  const localSlugs = ProductService.getAllLocalSlugs();
  const remoteSlugs = await supabaseProductService.getPublishedProductSlugs();
  
  // Combine and deduplicate slugs
  const allSlugs = [...new Set([...localSlugs, ...remoteSlugs.map(s => s.slug)])];
  
  return allSlugs.map(slug => ({ slug }));
}

/**
 * The product page component. It's a server component that fetches data
 * and renders the page statically.
 */
export default async function ProductPage({ params }: { params: Promise<{ slug: string }> }) {
  const { slug } = await params;
  const product = await ProductService.getProductBySlug(slug);

  // If no product is found for the given slug, render the 404 page.
  if (!product) {
    notFound();
  }

  return (
    <>
      <Navigation />
      <ProductPageContent product={product} />
      <Footer />
    </>
  );
}