// app/products/[slug]/page.tsx
// Dies ist deine dynamische Produktseite fÃ¼r den Next.js App Router.
// Sie wird unter der Route /products/:slug erreichbar sein.

import { notFound } from 'next/navigation';
import Navigation from '@/components/ui/Navigation';
import Footer from '@/components/shared/Footer';
import ProductPageContent from '@/components/productcomponents/ProductPageContent';
import { ProductService } from '@/data/productService';
import * as supabaseProductService from '@/lib/supabase-product-service';

// This enables ISR for all pages generated by this route.
export const revalidate = 3600;

// Ensure this runs in Node.js runtime on Cloudflare
export const runtime = 'nodejs';

export async function generateStaticParams() {
  try {
    const localSlugs = ProductService.getAllLocalSlugs();
    // Future: Combine with remote slugs
    // const remoteSlugs = await supabaseProductService.getPublishedProductSlugs();
    // const allSlugs = [...new Set([...localSlugs, ...remoteSlugs.map(s => s.slug)])];
    
    return localSlugs.map(slug => ({ slug }));
  } catch (error) {
    console.error('Error generating static params:', error);
    // Return empty array to prevent build failure
    return [];
  }
}

export default async function ProductPage({ 
  params 
}: { 
  params: Promise<{ slug: string }> 
}) {
  try {
    const { slug } = await params;
    const product = await ProductService.getProductBySlug(slug);

    if (!product) {
      console.log(`Product not found for slug: ${slug}`);
      notFound();
    }

    return (
      <>
        <Navigation />
        <ProductPageContent product={product} />
        <Footer />
      </>
    );
  } catch (error) {
    console.error('Error rendering product page:', error);
    // Return a more graceful error instead of crashing
    notFound();
  }
}